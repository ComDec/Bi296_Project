 
****************************************** 

 * This is a document for syntax assistance
 * Copyright(C) 2021-2022 WX-WZY-GRC Group
 * Written by WX in 2021.5

 * Version: 1.3.0 (dev)
 * Lasted edit time: 2021.6.5

 ****************************************** 

Introduction

  * Welcome to use DNACom

  * This is a program developed by Xi Wang, Zhongyi Wang, and Ruichu Gu.

    Our github repo is github.com/ComDec/Bi296_Project.git


  * DNACom exert multifunctions.

  --Convertion: Convert copious format file into a standard dcm file.

  --Compression/Decompression: Compressing/Decompression sequence with various algorithms.

  --Test: Test the performance of different algorithms to compress your file. 


Basic Usage

  ./DNACom [Option] [Parameter] [Filename] ...

  > Filename must input at last.

[OPTION]

  -h, --help         Obtain help from our doc

  -v, --version	     Obtain version information

  -c, --compress     Compress mode

  -d, --decompress   Decompress mode
   
  -t, --transfer     Transfer file into fasta format (FILENAME.fq --> FILENAME.fq.transfer)
  
  -e, --extract      Extract sequences from standard fasta or transfered file (FILENAME.transfer)
        
  -f, --MFC          Compress .fa via MFC algorithm. The output file will be notes as suffix .mfc
  
  -m, --huffman      Compress .fa.ex or file containing only DNA sequences via huffman algorithm.
   
  -o, --OEC	     Compress .fa.ex or file containing only DNA sequences via OEC algorithm.

  -n, --Num	     Compress .fa.ex or file containing only DNA sequences via Num algorithm.

[Parameter]

  > MFC algorithm

  -p, --parallel    Choose the parallel progression of compression. 
		    Default progression is 2 (if parameter is not used).

  -s, --speed       Choose the compression speed (Default speed: 2). 

			Speed 1: The fastest mode. Low compression rate and less memory cost.

			Speed 2: The balanced mode. Medium compression rate and medium memory cost.

			Speed 3: The slowest mode. High compression rate and high memory cost.

  > Huffman algorithm

  [Encodefile]	   Compressing [Encodefile] with two output files: [Encodefile_hbin] and [Encodefile_table].

  [Decodefile]	   Decompressing [Decodefile]. To simplify users input, users are allowed to 
	           input the filename of [Encodefile_hbin] or [Encodefile_table] only.

  > OEC algorithm

  [Encodefile]	   Compressing [Encodefile] with two output files: [Encodefile_obin] and [Encodefile_dic].

  [Decodefile]	   Decompressing [Decodefile]. To simplify users input, users are allowed to 
	           input the filename of [Encodefile_obin] or [Encodefile_dic] only.

  > Num algorithm

  [Filename]	   Compressing and Decompressing [Filename]. Display outcome on prompt windows.


